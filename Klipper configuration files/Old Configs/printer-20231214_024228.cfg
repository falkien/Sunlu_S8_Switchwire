# Falkien's Sunlu S8 with SKR 1.4t and 2209 stepper motors


# ------------------------------start--------------------------------------------#
# ================================================================================
# printer
# ================================================================================

[printer]
kinematics: corexz
max_velocity: 500
max_accel: 3000
max_accel_to_decel: 3000
max_z_velocity: 50
max_z_accel: 500
square_corner_velocity: 4.0

[input_shaper]
shaper_freq_x: 37.5
shaper_type_x: 2hump_ei
shaper_freq_y: 66.9
shaper_type_y: 2hump_ei


#[exclude_object]
# update moonraker.conf enable_object_processing: True

# [adxl345]
# cs_pin: host:None

# [resonance_tester]
# accel_chip: adxl345
# accel_per_hz: 40
# probe_points:
#     125,55,20


#####################################################################
# 	X/Z Stepper Settings
#####################################################################

[stepper_x]
step_pin: P2.2
dir_pin: P2.6
enable_pin: !P2.1
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200
# endstop_pin: tmc2209_stepper_x:virtual_endstop
endstop_pin: P1.29
position_endstop: 0
position_min: 0
position_max: 304
position_endstop: 304
# homing_retract_dist: 6.0
homing_speed: 20

# ================================================================================
# tmc2209 stepper_x
# ================================================================================

[tmc2209 stepper_x]
uart_pin: P1.10
interpolate: False
run_current: 0.85
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^P1.29

# ================================================================================
# stepper_z
# ================================================================================

[stepper_z]
step_pin: P0.22
dir_pin: P2.11
enable_pin: !P0.21
microsteps: 16
rotation_distance: 40
position_min: -5
homing_speed: 20
# homing_retract_dist: 6.0
position_max: 375
# endstop_pin: !P1.27
# position_endstop: 0.0
endstop_pin: probe:z_virtual_endstop

# ================================================================================
# tmc2209 stepper_z
# ================================================================================

[tmc2209 stepper_z]
uart_pin: P1.8
interpolate: False
run_current: 0.85
sense_resistor: 0.110
stealthchop_threshold: 0


# ================================================================================
# stepper_y
# ================================================================================

[stepper_y]
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200
# endstop_pin: tmc2209_stepper_y:virtual_endstop
endstop_pin: P1.28
position_endstop: 0
position_min: -30
position_max: 308
position_endstop: 308
homing_speed: 20

# ================================================================================
# tmc2209 stepper_y
# ================================================================================

[tmc2209 stepper_y]
uart_pin: P1.9
interpolate: False
run_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^P1.28
driver_SGTHRS: 85


# ================================================================================
# extruder
# ================================================================================

[extruder]
max_extrude_cross_section: 50
max_extrude_only_distance: 200
step_pin: P2.13
dir_pin: P0.11
enable_pin: !P2.12
microsteps: 32
gear_ratio: 50:17
# rotation_distance: 33.280
pressure_advance: 0.11
rotation_distance: 13.84 # Old value was 33.71
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: P2.7
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.24
pressure_advance: 0.05
pressure_advance_smooth_time: 0.06
#control: pid
#pid_kp: 25.588
#pid_ki: 1.496
#pid_kd: 109.388
min_temp: 0
max_temp: 295

# ================================================================================
# tmc2209 extruder
# ================================================================================

[tmc2209 extruder]
uart_pin: P1.4
interpolate: True
run_current: 0.35
# sense_resistor: 0.110
stealthchop_threshold: 0

# ================================================================================
# heater_bed
# ================================================================================

[heater_bed]
heater_pin: P2.5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.25
#control: pid
#pid_kp: 74.786
#pid_ki: 0.766
#pid_kd: 1825.718
min_temp: 0
max_temp: 110

# ================================================================================
# verify_heater heater_bed
# ================================================================================

[verify_heater heater_bed]
# The stock printer heats slowly due to a large bed and no external MOSFET.
# This should be reduced if an external MOSFET is added to increase max_temp
# and heating rate.
check_gain_time: 240

# ================================================================================
# fan
# ================================================================================

[fan]
pin: P2.3

# ================================================================================
# heater_fan my_nozzle_fan Turn this on once you move the fan to a different pin
# ================================================================================

[heater_fan my_nozzle_fan]
pin: P2.4
heater_temp: 50.0
fan_speed: 1.0

# ================================================================================
# mcu
# ================================================================================

[mcu]
#serial: /dev/serial/by-path/pci-0000:00:14.0-usb-0:1:1.0
serial: /dev/serial/by-id/usb-Klipper_lpc1769_1F000009A99869AF2610425EC42000F5-if00

# ================================================================================
# virtual_sdcard
# ================================================================================

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

# ================================================================================
# display
# ================================================================================

# [display]
# lcd_type: st7920
# cs_pin: PH1
# sclk_pin: PA1
# sid_pin: PH0
# encoder_pins: ^PC4, ^PC6
# click_pin: ^!PC2

#####################################################################
# 	Probe
#####################################################################

[probe]
# pin: P1.27
pin: !P0.10
x_offset: 0.0
y_offset: 20.0
z_offset: 0.0 
speed: 10.0
samples: 3
samples_result: average
sample_retract_dist: 2.0 # was 0.5
samples_tolerance: 0.1
samples_tolerance_retries: 3

# ================================================================================
# safe_z_home
# ================================================================================

[safe_z_home]
home_xy_position: 155, 155 #true home
# home_xy_position: 192, 209 #bltouch
speed: 100
z_hop: 10
z_hop_speed: 5
move_to_previous: False

# ================================================================================
# bed_mesh
# ================================================================================

[bed_mesh]
speed: 150
horizontal_move_z: 5
fade_start: 1.0
fade_end: 10
fade_target: 0
mesh_min: 7, 7
mesh_max: 267, 254
probe_count: 6, 6
algorithm: bicubic
bicubic_tension: 0.2
mesh_pps: 3,3
move_check_distance: 5
split_delta_z: .025

# ================================================================================
# Temp Sensors
# ================================================================================

#[temperature_sensor RPI]
#sensor_type: temperature_host

#[temperature_sensor Klipper]
#sensor_type: temperature_mcu



# -----------------------Macros---------------------------------------------------

# ================================================================================
# Neo Pixel LED's
# ================================================================================

[neopixel leds]
pin: P1.24
chain_count: 3
color_order: GRBW
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 1.0
initial_WHITE: 0.0

[gcode_macro _sb_vars]
# User settings for the StealthBurner status leds. You can change the status colors and led
# configurations for the logo and nozzle here.
variable_colors: {
        'logo': { # Colors for logo states
            'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},
            'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},
            'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},
            'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},
            'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},
            'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'printing': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'standby': {'r': 0.01, 'g': 0.01, 'b': 0.01, 'w': 0.1},
        },
        'nozzle': { # Colors for nozzle states
            'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},
            'standby': {'r': 0.6, 'g': 0.0, 'b': 0.0, 'w':0.0},
        },
        'thermal': {
            'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}
        }
    }
variable_logo_led_name:         "sb_leds" 
# The name of the addressable LED chain that contains the logo LED(s)
variable_logo_idx:              "1" 
# A comma-separated list of indexes LEDs in the logo
variable_nozzle_led_name:       "sb_leds"
# The name of the addressable LED chain that contains the nozzle LED(s). This will
# typically be the same LED chain as the logo.
variable_nozzle_idx:            "2,3"
# A comma-separated list of indexes of LEDs in the nozzle
gcode:
    # This section is required.  Do Not Delete.


[gcode_macro _set_sb_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = params.LED|string %}
    {% set idx = (params.IDX|string).split(',') %}
    {% set transmit_last = params.TRANSMIT|default(1) %}

    {% for led_index in idx %}
        {% set transmit=transmit_last if loop.last else 0 %}
        set_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}
    {% endfor %}

[gcode_macro _set_sb_leds_by_name]
gcode:
    {% set leds_name = params.LEDS %}
    {% set color_name = params.COLOR %}
    {% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}
    {% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}
    {% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}
    {% set transmit = params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}

[gcode_macro _set_logo_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _sb_vars"].logo_led_name %}
    {% set idx = printer["gcode_macro _sb_vars"].logo_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro _set_nozzle_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}
    {% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro set_logo_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}

[gcode_macro set_nozzle_leds_on]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}

[gcode_macro set_nozzle_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}

[gcode_macro status_off]
gcode:
    set_logo_leds_off transmit=0
    set_nozzle_leds_off

[gcode_macro status_ready]
gcode:
    _set_sb_leds_by_name leds="logo" color="standby" transmit=0
    _set_sb_leds_by_name leds="nozzle" color="standby" transmit=1

[gcode_macro status_busy]
gcode:
    _set_sb_leds_by_name leds="logo" color="busy" transmit=0
    set_nozzle_leds_on

[gcode_macro status_heating]
gcode:
    _set_sb_leds_by_name leds="logo" color="heating" transmit=0
    _set_sb_leds_by_name leds="nozzle" color="heating" transmit=1

[gcode_macro status_leveling]
gcode:
    _set_sb_leds_by_name leds="logo" color="leveling" transmit=0
    set_nozzle_leds_on

[gcode_macro status_homing]
gcode:
    _set_sb_leds_by_name leds="logo" color="homing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_cleaning]
gcode:
    _set_sb_leds_by_name leds="logo" color="cleaning" transmit=0
    set_nozzle_leds_on

[gcode_macro status_meshing]
gcode:
    _set_sb_leds_by_name leds="logo" color="meshing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_calibrating_z]
gcode:
    _set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0
    set_nozzle_leds_on

[gcode_macro status_printing]
gcode:
    _set_sb_leds_by_name leds="logo" color="printing" transmit=0
    set_nozzle_leds_on


# ================================================================================
# pause_resume
# ================================================================================

[pause_resume]
recover_velocity: 50

# ================================================================================
# display_status
# ================================================================================

[display_status]

# ================================================================================
# gcode_macro G29
# ================================================================================

[gcode_macro G29]
gcode:
    {% if printer.toolhead.homed_axes == "xyz" %}
        BED_MESH_CALIBRATE
        G1 X117 Y117 Z20 F4000
    {% else %}
        M118 Homing before bed mesh calibrate
        G28
        BED_MESH_CALIBRATE
        G1 X117 Y117 Z20 F4000
    {% endif %}

# ================================================================================
# gcode_macro CANCEL_PRINT
# ================================================================================

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    M220 S100 ; Reset Speed factor override percentage to default (100%)
    M221 S100 ; Reset Extrude factor override percentage to default (100%)
    G91 ; Set coordinates to relative
    {% if printer.extruder.temperature >= 170 %}
       G1 F1800 E-1 ; Retract filament 3 mm to prevent oozing
    {% endif %}

   ;if all axis are homed, lift the hotend to leave room for hot filament to ooze and to keep it clear of the bed.
    {% if printer.toolhead.homed_axes == "xyz" %}
       G1 F6000 Z10 ; Move Z Axis up 10 mm to allow filament ooze freely
       G90 ; Set coordinates to absolute
       G1 X0 Y221 F1000 ; Move Heat Bed to the front for easy print removal
       M84 ; Disable stepper motors
    {% endif %}

    ;set part fan speed to zero.
    M106 S0
   ;bed and hotend are left at the print temps in case I want to restart.

# ================================================================================
# gcode_macro PAUSE
# ================================================================================

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000


# ================================================================================
# gcode_macro RESUME
# ================================================================================

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME

# ------------------------------END----------------------------------------------#

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 36.865
#*# pid_ki = 4.637
#*# pid_kd = 73.270
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.829
#*# pid_ki = 1.106
#*# pid_kd = 1102.433
